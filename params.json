{"name":"Projects","tagline":"","body":"## Welcome!\r\nThis page contains links to a selection of my recent projects.\r\nHere's a brief summary of the projects in the collection:\r\n\r\n***\r\n### Android Projects \r\n\r\n`Transit App`\r\n\r\nThis is an android app that I made from scratch. It provides real-time GPS tracking based prediction of bus and metro arrival times for 60+ transit agencies. The core framework used to get real time data is the Nextbus API.\r\n\r\n### Artificial Intelligence Projects\r\n\r\n`Optimal Search`\r\n\r\nThis project is an exploration of AI based search algorithms and techniques using Pacman as an abstraction that provides a framework for the application of search algorithms.\r\n\r\n`Adversarial Search`\r\n\r\nThis project is an implementation of multi-agent adversarial search algorithms that use minimax, expectimax and Alpha-Beta pruning to make optimal adversarial choices.\r\n\r\n`Reinforcement learning`\r\n\r\nThis project is an application of Value Iteration and Q-learning to a simulated robot controller (Crawler) and Pacman.\r\n\r\n`Inference`\r\n\r\nThe focus of this project is the implemention of algorithms for performing both exact and approximate inference using Bayes' Nets and techniques such as particle filtering.\r\n\r\n### Computer Architecture Projects (mainly using RISC-V)\r\n\r\n`Branch Prediction`\r\n\r\nThis project simulates a wide array of different branch predictor designs for the RISC-V instruction set architecture (ISA). The report.pdf file included along with the project files provides more information on the kind of simulations run and the results achieved.\r\n\r\n`Cache Optimization`\r\n\r\nThe focus of the Cache Optimization project includes simulating a range of cache designs and analyzing the optimality of different configurations. A big part of this project involves designing a Victim Cache that performs better cache block replacement than current schemes.\r\n\r\n`Instruction Issue Selection`\r\n\r\nThis project focuses on the implementation of various instruction issue-select policies with a goal of minimizing the number of cycles per instruction (CPI) used by the processor. It uses the Berkeley Out of Order Machine (BOOM) to perform benchmarking, and run analytics on instances of the designed issue-select policies. \r\n\r\n`Processor Design`\r\n\r\nThis project includes the design of a processor from scratch using Logisim and other tools.\r\n\r\n### Other projects\r\n\r\n`Machine Player`\r\n\r\nThis project is an implementation of a tactical strategy game called Network. It also includes the implementation of a machine player that one can play against. The machine player using minimax with alpha beta pruning to select optimal actions.\r\n\r\n`Hadoop Map Reduce`\r\n\r\nThe focus of this project is an implementation of a generalized co-occurrence algorithm that works with the Hadoop Map Reduce framework and is able to run on Amazon's EC2.\r\n\r\n\r\n***\r\n\r\n## Contact\r\nFeel free to contact me at rrc at berkeley dot edu!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}